{"version":3,"sources":["./src/app/servicios/plaza-api.service.ts","./src/app/servicios/plaza.service.ts","./src/app/servicios/ticket-api.service.ts","./src/app/servicios/ticket.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { PlazaService } from './plaza.service';\nimport { Plaza } from './../modelo/plaza';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient} from '@angular/common/http';\nimport { map, tap } from 'rxjs/operators';\nimport { BehaviorSubject } from 'rxjs';\n\n//const urlBasePlazas = 'http://localhost:8080/api/plazas';\nconst urlBasePlazas = 'https://sigepark.herokuapp.com/api/plazas';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlazaApiService extends PlazaService {\n\n  private message = new BehaviorSubject(20);\n  public sharedMessage = this.message.asObservable();\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getPlazasTotales(): Observable<number> {\n    return this.http.get(urlBasePlazas)\n    .pipe(\n      map(respuesta => respuesta['page'] ? respuesta['page'].totalElements : 0)\n    );\n  }\n\n  getPlazasOcupadas(): Observable<number> {\n    return this.http.get<number>(urlBasePlazas + '/search/total-ocupado?ocupado=true');\n  }\n\n  getPlazas(): Observable<Plaza[]> {\n    return this.http\n      .get(urlBasePlazas)\n      .pipe(\n        map((respuesta) =>\n          respuesta['_embedded'] ? respuesta['_embedded'].plaza : []\n        )\n      );\n  }\n\n  getSharedMessage() {\n    return this.sharedMessage;\n  }\n\n  nextMessage(plazasTotales: number) {\n    this.message.next(plazasTotales);\n  }\n\n\n  insertarPlazas(plaza: Plaza) {\n    return this.http.post(urlBasePlazas, plaza)\n      .pipe(tap(_ => { const plazasTotales = this.message.value + 1; this.nextMessage(plazasTotales); }\n      ));\n  }\n\n  quitarPlazas(): Observable<Object> {\n    return this.http.delete(`${urlBasePlazas}`)\n      .pipe(tap(_ => { const plazasTotales = this.message.value - 1; this.nextMessage(plazasTotales); }\n      ));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Plaza } from './../modelo/plaza';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class PlazaService {\n\n  abstract getPlazasTotales(): Observable<number>;\n\n  abstract getPlazasOcupadas(): Observable<number>;\n\n  abstract getPlazas(): Observable<Plaza[]>;\n\n  abstract getSharedMessage();\n\n  abstract nextMessage(plazasTotales: number);\n\n  abstract insertarPlazas(plaza: Plaza);\n\n  abstract quitarPlazas(): Observable<Object>;\n\n}\n","import { Ticket } from './../modelo/ticket';\nimport { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { TicketWrapper } from '../modelo/ticket-wrapper';\nimport { Tarifa } from '../modelo/tarifa';\nimport { Plaza } from '../modelo/plaza';\nimport { TicketService } from './ticket.service';\n\n\n//const urlBaseTickets = 'http://localhost:8080/api/tickets';\nconst urlBaseTickets = 'https://sigepark.herokuapp.com/api/tickets';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TicketsApiService extends TicketService {\n  private messageOcupadas = new BehaviorSubject(0);\n  public sharedMessageOcupadas = this.messageOcupadas.asObservable();\n\n  constructor(private http: HttpClient) {\n    super();\n  }\n\n  getTarifa(url): Observable<Tarifa> {\n    return this.http.get<Tarifa>(url);\n  }\n\n  getPlaza(url): Observable<Plaza> {\n    return this.http.get<Plaza>(url);\n  }\n\n  getTickets(): Observable<Ticket[]> {\n    return this.http\n      .get(urlBaseTickets)\n      .pipe(\n        map((respuesta) =>\n          respuesta['_embedded'] ? respuesta['_embedded'].tickets : []\n        )\n      );\n  }\n\n  getTicketNoPagados(): Observable<Ticket[]> {\n    return this.http\n      .get<Ticket[]>(urlBaseTickets + '/search/por-pagado?pagado=false')\n      .pipe(\n        map((respuesta) =>\n          respuesta['_embedded'] ? respuesta['_embedded'].tickets : []\n        )\n      );\n  }\n\n  crearTicket(matricula: string): Observable<TicketWrapper> {\n    return this.http\n      .post<TicketWrapper>(urlBaseTickets, { matricula })\n      .pipe(\n        tap((_) => {\n          const plazasOcupadas = this.messageOcupadas.value + 1;\n          this.nextMessageOcupadas(plazasOcupadas);\n        })\n      );\n  }\n\n  pagarTicket(id: number): Observable<TicketWrapper> {\n    return this.http.patch<TicketWrapper>(`${urlBaseTickets}/${id}`, null).pipe(\n      tap((_) => {\n        const plazasOcupadas = this.messageOcupadas.value - 1;\n        this.nextMessageOcupadas(plazasOcupadas);\n      }),\n      catchError((error: HttpErrorResponse) => {\n        if (error.status === 404) {\n          alert('Mensaje desde el Observable: Ticket no encontrado');\n        } else {\n          alert(\n            'Mensaje desde el Observable: Error inesperado: ' + error.message\n          );\n        }\n        return [];\n      })\n    );\n  }\n\n  getSharedMessageOcupadas() {\n    return this.sharedMessageOcupadas;\n  }\n\n  nextMessageOcupadas(plazasOcupadas: number) {\n    this.messageOcupadas.next(plazasOcupadas);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Tarifa } from '../modelo/tarifa';\nimport { Observable} from 'rxjs';\nimport { Plaza } from '../modelo/plaza';\nimport { Ticket } from './../modelo/ticket';\nimport { TicketWrapper } from '../modelo/ticket-wrapper';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class TicketService {\n\n  abstract getTarifa(url): Observable<Tarifa>;\n\n  abstract getPlaza(url): Observable<Plaza>;\n\n  abstract getTickets(): Observable<Ticket[]>;\n\n  abstract getTicketNoPagados(): Observable<Ticket[]>;\n\n  abstract crearTicket(matricula: string): Observable<TicketWrapper> ;\n\n  abstract pagarTicket(id: number): Observable<TicketWrapper>;\n}\n"],"sourceRoot":"webpack:///"}